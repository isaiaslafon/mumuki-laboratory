.mu-kids-exercise.mu-kindergarten {

  // layout

  display: flex;
  flex-flow: column;

  .mu-kids-exercise-workspace {
    display: flex;
    flex-flow: row;
    height: calc(100% - #{$kids-characters-height});
    width: 100%;
  }

  .mu-kids-single-state,
  .mu-kids-blocks {
    width: 50%;
    height: 100%
  }

  .mu-kids-blocks {
    margin-top: 0;
  }

  // no board numbers,
  // but a thicker border instead

  table.gbs_board.style-scope.gs-board {
    padding: 3px;
  }

  .gbs_lv.gbs_lvl.style-scope.gs-board,
  .gbs_lv.gbs_lvr.style-scope.gs-board,
  tr.style-scope.gs-board:first-child,
  tr.style-scope.gs-board:last-child {
    display: none
  }

  // no final state,
  // initial state fills its area

  .mu-kids-state.mu-state-initial {
    height: 100%;
    width: 100%;
  }

  .mu-kids-state.mu-state-final {
    display: none;
  }

  .mu-kids-compass-rose {
    display: none;
  }
}

.mu-kindergarten.container-fluid {
  .mu-kids-exercise-description,
  .mu-kids-exercise-description-fixed {
    padding: 0;
  }
}

.mu-kindergarten-context {

  .modal-dialog {

    height: 100vh;
    width: 100vw;
    margin: 0;

    .modal-content {
      position: absolute;

      $width: 800px;
      $height: $width * 0.625;

      height: $height;
      width: $width;

      top: calc(50vh - #{$height} / 2);
      left: calc(50vw - #{$width} / 2);

      $border-width: 16px;
      border: $border-width solid $mu-color-link;
      border-radius: $border-width;
      box-shadow: none;

      .mu-kindergarten-close-button {
        $diameter: 64px;
        position: absolute;
        border-radius: 50%;
        height: $diameter;
        width: $diameter;
        color: white;
        font-weight: bold;
        border: none;
        padding: 0;
        background: $mu-color-link;
        top: - $diameter / 2 - $border-width / 2;
        right: - $diameter / 2 - $border-width / 2;
      }
    }
  }
}

$bubble-border-width: 3px;
$bubble-height: 90px;
$bubble-border: $bubble-border-width solid $kids-speech-border-color;
$bubble-ballon-size: 24px;

$bubble-background-color: white;
$bubble-padding: 30px;

.mu-kindergarten-header {
  @include display-flex(row nowrap, flex-start, center);

  width: 100%;

  .mu-kindergarten-character {
    @include display-flex(row nowrap, flex-start, center);

    margin-right: 15px;

    width: 50%;

    $bubble-border-width: 3px;
    $bubble-height: 90px;
    $bubble-border: $bubble-border-width solid $kids-speech-border-color;
    $bubble-ballon-size: 24px;

    $bubble-background-color: white;
    $bubble-padding: 30px;

    .mu-kindergarten-character-speech-bubble {
      display: flex;
      position: relative;
      align-items: center;

      padding: $bubble-padding;
      padding-right: $bubble-height / 2 + $bubble-padding;

      color: #333;
      border-radius: 10px;
      background: white;
      border: $bubble-border;
      height: $bubble-height;
      min-height: $bubble-height;
      max-height: $bubble-height;

      width: 100%;
      max-width: 100%;

      p {
        margin: 0;
      }

      &:before {
        content: "";
        position: absolute;
        bottom: -20px;
        top: $bubble-height / 2 - $bubble-ballon-size / 2;
        left: -$bubble-ballon-size / 2;
        width: $bubble-ballon-size;
        height: $bubble-ballon-size;
        background: white;
        border: $bubble-border;
        border-left-color: $bubble-background-color;
        border-top-color: $bubble-background-color;
        transform: rotate(135deg);
        border-radius: 50%;
      }
    }

    .mu-kindergarten-buttons {
      display: flex;
      flex-flow: column;
      position: absolute;
      top: -$bubble-border-width;
      right: -$bubble-border-width;
      height: calc(100% + #{$bubble-border-width} * 3);
      border-radius: 10px;

      .mu-kindergarten-show-context,
      .mu-kindergarten-play-description {
        border: $bubble-border;
        height: 50%;
        width: $bubble-height / 2;
      }

      .mu-kindergarten-show-context {
        border-top-right-radius: 10px;
      }

      .mu-kindergarten-play-description {
        margin-top: -$bubble-border-width;
        border-bottom-right-radius: 10px;
      }

    }
  }

  .mu-kindergarten-hint {

    $light-bubble-color: #FAD59F;
    $light-bubble-border: $bubble-border-width solid $light-bubble-color;

    @include display-flex(row-reverse nowrap, flex-start, center);

    width: 50%;
    margin-left: 15px;

    button {
      background: none;
      border: none;
      outline: none;
    }
    .mu-hint-light {
      height: 100%;
      &.on {
        cursor: pointer;
        &:hover {
          filter: brightness(1.15);
        }
      }
    }

    .mu-kindergarten-light-speech-bubble {
      display: flex;
      position: relative;
      align-items: center;

      padding: $bubble-padding;
      padding-right: $bubble-height / 2 + $bubble-padding;

      color: #333;
      border-radius: 10px;
      background: $light-bubble-color;
      border: $light-bubble-border;
      height: $bubble-height;
      min-height: $bubble-height;
      max-height: $bubble-height;

      width: 100%;
      max-width: 100%;

      p {
        margin: 0;
      }

      &:after {
        content: "";
        position: absolute;
        bottom: -20px;
        top: $bubble-height / 2 - $bubble-ballon-size / 2;
        right: -$bubble-ballon-size / 2;
        width: $bubble-ballon-size;
        height: $bubble-ballon-size;
        background: $light-bubble-color;
        border: $light-bubble-border;
        border-radius: 50%;
      }
      .mu-kindergarten-hint-media {
        background: white;
        width: 100%;
        margin: 10px;
        &:not(.open) {
          display: none;
        }
      }
      .expand-or-collapse-hint-media {
        $button-width: 60px;
        position: absolute;
        width: $button-width;
        height: $button-width / 2;
        bottom: 0;
        left: calc(50% - #{$button-width / 2});
        .fa-caret-down {
          color: white;
        }
        .fa-caret-up {
          color: $light-bubble-color;
        }
      }

      &:not(.open) {
        display: none;
      }
    }
  }
}
